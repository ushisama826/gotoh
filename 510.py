import datetime as dt
from datetime import timedelta
import http, urllib.request, json, time, re, requests, os, subprocess, json, sys, calendar

HOLIDAY_URL='https://holidays-jp.github.io/api/v1/date.json'
HOLIDAY_FILE='.holidays.txt'
holidays = [
 "2010.01.01", "2010.01.11", "2010.02.11", "2010.03.21", "2010.03.22", "2010.04.29", "2010.05.03",
 "2010.05.04", "2010.05.05", "2010.07.19", "2010.09.20", "2010.09.23", "2010.10.11", "2010.11.03",
 "2010.11.23", "2010.12.23", "2011.01.01", "2011.01.10", "2011.02.11", "2011.03.21", "2011.04.29",
 "2011.05.03", "2011.05.04", "2011.05.05", "2011.07.18", "2011.09.19", "2011.09.23", "2011.10.10",
 "2011.11.03", "2011.11.23", "2011.12.23", "2012.01.01", "2012.01.02", "2012.01.09", "2012.02.11",
 "2012.03.20", "2012.04.29", "2012.04.30", "2012.05.03", "2012.05.04", "2012.05.05", "2012.07.16",
 "2012.09.17", "2012.09.22", "2012.10.08", "2012.11.03", "2012.11.23", "2012.12.23", "2012.12.24",
 "2013.01.01", "2013.01.14", "2013.02.11", "2013.03.20", "2013.04.29", "2013.05.03", "2013.05.04",
 "2013.05.05", "2013.05.06", "2013.07.15", "2013.09.16", "2013.09.23", "2013.10.14", "2013.11.03",
 "2013.11.04", "2013.11.23", "2013.12.23", "2014.01.01", "2014.01.13", "2014.02.11", "2014.03.21",
 "2014.04.29", "2014.05.03", "2014.05.04", "2014.05.05", "2014.05.06", "2014.07.21", "2014.09.15",
 "2014.09.23", "2014.10.13", "2014.11.03", "2014.11.23", "2014.11.24", "2014.12.23", "2015.01.01",
 "2015.01.12", "2015.02.11", "2015.03.21", "2015.04.29", "2015.05.03", "2015.05.04", "2015.05.05",
 "2015.05.06", "2015.07.20", "2015.09.21", "2015.09.22", "2015.09.23", "2015.10.12", "2015.11.03",
 "2015.11.23", "2015.12.23", "2016.01.01", "2016.01.11", "2016.02.11", "2016.03.20", "2016.03.21",
 "2016.04.29", "2016.05.03", "2016.05.04", "2016.05.05", "2016.07.18", "2016.08.11", "2016.09.19",
 "2016.09.22", "2016.10.10", "2016.11.03", "2016.11.23", "2016.12.23", "2017.01.01", "2017.01.02",
 "2017.01.09", "2017.02.11", "2017.03.20", "2017.04.29", "2017.05.03", "2017.05.04", "2017.05.05",
 "2017.07.17", "2017.08.11", "2017.09.18", "2017.09.23", "2017.10.09", "2017.11.03", "2017.11.23",
 "2017.12.23", "2018.01.01", "2018.01.08", "2018.02.11", "2018.02.12", "2018.03.21", "2018.04.29",
 "2018.04.30", "2018.05.03", "2018.05.04", "2018.05.05", "2018.07.16", "2018.08.11", "2018.09.17",
 "2018.09.23", "2018.09.24", "2018.10.08", "2018.11.03", "2018.11.23", "2018.12.23", "2018.12.24",
 "2019.01.01", "2019.01.14", "2019.02.11", "2019.03.21", "2019.04.29", "2019.04.30", "2019.05.01",
 "2019.05.02", "2019.05.03", "2019.05.04", "2019.05.05", "2019.05.06", "2019.07.15", "2019.08.11",
 "2019.08.12", "2019.09.16", "2019.09.23", "2019.10.14", "2019.10.22", "2019.11.03", "2019.11.04",
 "2019.11.23", "2020.01.01", "2020.01.13", "2020.02.11", "2020.02.23", "2020.02.24", "2020.03.20",
 "2020.04.29", "2020.05.03", "2020.05.04", "2020.05.05", "2020.05.06", "2020.07.23", "2020.07.24",
 "2020.08.10", "2020.09.21", "2020.09.22", "2020.11.03", "2020.11.23", "2021.01.01", "2021.01.11",
 "2021.02.11", "2021.02.23", "2021.03.20", "2021.04.29", "2021.05.03", "2021.05.04", "2021.05.05",
 "2021.07.22", "2021.07.23", "2021.08.08", "2021.08.09", "2021.09.20", "2021.09.23", "2021.11.03",
 "2021.11.23", "2022.01.01", "2022.01.10", "2022.02.11", "2022.02.23", "2022.03.21", "2022.04.29",
 "2022.05.03", "2022.05.04", "2022.05.05", "2022.07.18", "2022.08.11", "2022.09.19", "2022.09.23",
 "2022.10.10", "2022.11.03", "2022.11.23", "2023.01.01", "2023.01.02", "2023.01.09", "2023.02.11",
 "2023.02.23", "2023.03.21", "2023.04.29", "2023.05.03", "2023.05.04", "2023.05.05", "2023.07.17",
 "2023.08.11", "2023.09.18", "2023.09.23", "2023.10.09", "2023.11.03", "2023.11.23"
]

if os.path.exists(HOLIDAY_FILE):
    holidays.clear()
    with open(HOLIDAY_FILE, 'r') as f:
        holidays = f.read().split()

server_dict = json.loads(requests.get(HOLIDAY_URL).text)
server_list = list(server_dict.keys())
holidays.extend(server_list)
holidays = list(set(holidays))
holidays.sort()

with open(HOLIDAY_FILE, 'w') as f:
    for x in holidays:
        f.write(x + '\n')

today = dt.datetime.strptime('2010.01.01', '%Y.%m.%d')
MonthEnd = False
Gotohs = []

while today < dt.datetime.now():
    if today.day < 5:
        today = dt.datetime(today.year, today.month, 5)
    elif today.day < 10:
        today = dt.datetime(today.year, today.month, 10)
    elif today.day < 15:
        today = dt.datetime(today.year, today.month, 15)
    elif today.day < 20:
        today = dt.datetime(today.year, today.month, 20)
    elif today.day < 25:
        today = dt.datetime(today.year, today.month, 25)
    else:
        MonthEnd = True
        if today.month in (1, 3, 5, 7, 8, 10):
            today = dt.datetime(today.year, today.month, 31)
        elif today.month in (4, 6, 9, 11, 12):
            today = dt.datetime(today.year, today.month, 30)
        else:
            today = dt.datetime(today.year, today.month, calendar.monthrange(today.year, today.month)[1])
    gotoh = today
    while dt.datetime.strftime(gotoh, '%Y.%m.%d') in holidays or gotoh.weekday() in (5, 6) or \
     (gotoh.month == 1 and gotoh.day in (2, 3)) or (gotoh.month == 12 and gotoh.day == 31):
        gotoh -= dt.timedelta(1)
    Gotohs.append(gotoh)
    if MonthEnd:
        today = dt.datetime(today.year, today.month, calendar.monthrange(today.year, today.month)[1]) + timedelta(1)
        MonthEnd = False
    else:
        today += timedelta(1)

Gotohs = list(set(Gotohs))
Gotohs.sort()

#    print(gotoh.strftime('%Y.%m.%d'))
sys.exit(0)    
